GFG : area of intersection of two circle


Area of intersection of two circles
Difficulty: EasyAccuracy: 24.35%Submissions: 3K+Points: 2
Given the coordinates of the centres of two circles (X1, Y1) and (X2, Y2) as well as the radii of the respective circles R1 and R2.Find the floor of the area of their intersection.
Note: Use the value of Pi as 3.14

Example 1:

Input:
X1=0,Y1=0,R1=4
X2=6,Y2=0,R2=4
Output:
7
Explanation:
The intersecting area equals 7.25298806.
So,Answer is 7.
Example 2:

Input:
X1=0,Y1=0,R1=5
X2=11,Y2=0,R2=5
Output:
0
Explanation:
The circles don't intersect.

Your Task:
You don't need to read input or print anything. Your task is to complete the function intersectionArea() which takes the coordinates of the centers as well as the radii(X1, Y1, R1, X2, Y2, R2) as input parameters and returns the area of intersection of the two circles.


Expected Time Complexity:O(LogN)
Expected Auxillary Space:O(1)


Constraints:
-109<=X1,Y1,X2,Y2<=109
1<=R1,R2<=109




Solution   ;::


class Solution {
    long intersectionArea(double X1, double Y1, double R1, double X2, double Y2,
                          double R2) {
        // code here
       double PI = 3.14;
        
        // Step 1: Compute distance between centers
        double d = Math.sqrt(Math.pow(X2 - X1, 2) + Math.pow(Y2 - Y1, 2));

        // Step 2: If one circle is inside the other
        if (d <= Math.abs(R1 - R2)) {
            int smallerRadius =(int) Math.min(R1, R2);
            return (int) Math.floor(PI * smallerRadius * smallerRadius);
        }

        // Step 3: If circles do not overlap
        if (d >= R1 + R2) {
            return 0;
        }

        // Step 4: Compute intersection area for overlapping circles
        double angle1 = Math.acos((d * d + R1 * R1 - R2 * R2) / (2 * d * R1));
        double angle2 = Math.acos((d * d + R2 * R2 - R1 * R1) / (2 * d * R2));

        double sectorArea1 = angle1 * R1 * R1;
        double sectorArea2 = angle2 * R2 * R2;
        
        double triangleArea = 0.5 * Math.sqrt((-d + R1 + R2) * (d + R1 - R2) * (d - R1 + R2) * (d + R1 + R2));

        double intersectionArea = sectorArea1 + sectorArea2 - triangleArea;

        // Step 5: Floor the result
        return (int) Math.floor(intersectionArea);
    }
};
